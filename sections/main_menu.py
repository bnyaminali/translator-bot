import json

from aiogram import Router, types, F
import aiohttp
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

from shared import UserStates, main_menu_keyboard, SERVER_SECURE, SERVER_BASEURL, plural, translations_genitive, \
    WEBAPP_BASEURL

main_menu_router = Router()


def webapp_keyboard(available: list[str]) -> InlineKeyboardMarkup:
    json_format = json.dumps(available).replace('"', '%22')
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=f'üî§ –í—ã–±—Ä–∞—Ç—å –∏–∑ {len(available)} {plural(len(available), translations_genitive)}',
                                 web_app=WebAppInfo(url=f'{WEBAPP_BASEURL}?available={json_format}'))
        ],
        [
            InlineKeyboardButton(text=f'üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data='update-translations')
        ]
    ])


async def answer_webapp(message: types.Message):
    async with aiohttp.ClientSession().get(f'{SERVER_BASEURL}get_list?{SERVER_SECURE}') as request:
        available = [str(i[1]).capitalize() for i in (await request.json())]
        await message.edit_text(f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç {len(available)} –ø–µ—Ä–µ–≤–æ–¥–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏ '
                                f'–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É. –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫, –Ω–∞–∂–º–∏—Ç–µ '
                                f'"–û–±–Ω–æ–≤–∏—Ç—å".', reply_markup=webapp_keyboard(available))


@main_menu_router.message(UserStates.main_menu, F.web_app_data)
async def got_data(message: types.Message):
    await message.answer(f'–¢–≤–æ—ë —Å–ª–æ–≤–æ: {message.web_app_data.data}\n–ü–µ—Ä–µ–≤–æ–¥: –ü—Ä–∏–≤–µ—Ç')


@main_menu_router.message(UserStates.main_menu, F.text == '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã')
async def send_webapp(message: types.Message):
    loading = await message.answer('–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ...')
    await answer_webapp(loading)


@main_menu_router.callback_query(UserStates.main_menu, F.data == 'update-translations')
async def update_translations(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text('–û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ...')
    await answer_webapp(callback_query.message)
    await callback_query.answer('–û–±–Ω–æ–≤–ª–µ–Ω–æ!')


@main_menu_router.message(UserStates.main_menu)
async def echo_main(message: types.Message):
    await message.answer('–¢—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é!', reply_markup=main_menu_keyboard)
